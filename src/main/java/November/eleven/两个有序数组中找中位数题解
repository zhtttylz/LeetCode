本题时间复杂度log(m + n) 说明不能使用归并的方式合并成一个数组在进行求解
知道了两个数组长度,求中位数,也就是说中位数是求第 m + n / 2这个数
注意:中位数根据数组长度奇偶性不同,会有不同的值,有个tips ((m + n + 1 / 2) + (m + n + 1 / 2)) / 2可以无视奇偶长度进行求解

这也就转变成了在两个有序数组中求解 第k大的元素,这里推荐使用二分,每次排除掉k/2个元素,直到k为1为止,当k为1
的时候两个指针指向的小的数就是结果

需要明确的几个变量:nums1Len:从0开始代表nums1的角标
K:当前二分的进度,从1开始,因此如果要使用这个值作为数组的角标,要-1
求中间数:如果n1数组切不出来k/2个,那么就将当前位赋值为最大数,从n2数组中切,不管n1数组中设下的这个数是什么,从n2中切掉的
数都不可能是我们需要的值,假设:
[1]
[3,4,5,6,7,8]

模拟递归:

初始值
k = 4
n1Len = 0
n1Len = 0
n1 :[1]
n2: [3,4,5,6,7,8]



第一次递归:
中间值 是上一次 k/2的这个值,也就是从两个数组中取角标为2的数,n1取不出来,从n2中去除角标为2左边的数,包括角标为2的中间值
k = 4
n1Len = 0
n2Len = 2
n1 :[1]
n2: [5,6,7,8]

第二次递归:
这次k/2 = 1中取 从两个数组中取长度为1的,n1中取出来是1 n2取出来是5 将1左边的数包括1从数组n1中去除
k = 1
n1Len = 1
n2Len = 2
n1 : [1]
n2 : [5,6,7,8]

第三次递归
k = 1
n1Len = 1
n2Len = 2
n1 : []
n2 : [5,6,7,8]

return n2[n1length] = [3,4,5,6,7,8] 中角标为2的 = 5